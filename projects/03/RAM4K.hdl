// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=t1, b=t2, c=t3, d=t4, e=t5, f=t6, g=t7, h=t8);
    And16(a[0..11]=address, b=true, out[0..8]=mod);
    RAM512(in=in, load=t1, address=mod, out=p1);
    RAM512(in=in, load=t2, address=mod, out=p2);
    RAM512(in=in, load=t3, address=mod, out=p3);
    RAM512(in=in, load=t4, address=mod, out=p4);
    RAM512(in=in, load=t5, address=mod, out=p5);
    RAM512(in=in, load=t6, address=mod, out=p6);
    RAM512(in=in, load=t7, address=mod, out=p7);
    RAM512(in=in, load=t8, address=mod, out=p8);
    Mux8Way16(a=p1, b=p2, c=p3, d=p4, e=p5, f=p6, g=p7, h=p8, sel=address[9..11], out=out);
}