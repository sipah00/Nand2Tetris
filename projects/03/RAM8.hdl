// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=t1, b=t2, c=t3, d=t4, e=t5, f=t6, g=t7, h=t8);
    Register(in=in, load=t1, out=p1);
    Register(in=in, load=t2, out=p2);
    Register(in=in, load=t3, out=p3);
    Register(in=in, load=t4, out=p4);
    Register(in=in, load=t5, out=p5);
    Register(in=in, load=t6, out=p6);
    Register(in=in, load=t7, out=p7);
    Register(in=in, load=t8, out=p8);
    Mux8Way16(a=p1, b=p2, c=p3, d=p4, e=p5, f=p6, g=p7, h=p8, sel=address, out=out);
}